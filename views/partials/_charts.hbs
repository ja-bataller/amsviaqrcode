{{!-- LATE CHART --}}
<script>
    let firstChart = document.querySelector("#firstChart").getContext("2d");

    // Asynchronous Function - Getting the Data from the Database
    async function loadLate() {
        let firstChart = document.getElementById("firstChart").getContext("2d");

        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/late-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            });

            // Received data from Database
            const data = await res.json();

            // Here are the Data one by one which came from the Database
            trafficCount = data.success.traffic;
            dmtCount = data.success.delayedMassTransit;
            badweatherCount = data.success.badWeather;
            familyillnessCount = data.success.familyIllness;
            oversleptCount = data.success.overslept;
            othersCount = data.success.others;

            // if the getting of data from Database is success
            if (data.success) {
                document.querySelector("#lateSpinner").style.display = "none";
                document.querySelector("#firstChart").style.display = "block";

                // Creating a Chart with Dynamic data came from the Database
                let lateChart = new Chart(firstChart, {
                    type: "pie",
                    data: {
                        labels: ["Traffic", "Delayed Mass Transit", "Bad Weather", "Family sickness", "Overslept", "Others"],
                        datasets: [
                            {
                                label: "Late Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    trafficCount, dmtCount, badweatherCount, familyillnessCount, oversleptCount, othersCount
                                ],

                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#d1d9d9"
                                ]
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Late Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            }
            else {
                iziToast.info({
                    title: data.error,
                    position: "topCenter",
                    timeout: 3000,
                });

            }
        }
        catch (err) {
            console.log(err);
        }
    };
    loadLate();
</script>

{{!-- ABSENT CHART --}}
<script>
    let secondChart = document.querySelector("#secondChart").getContext("2d");

    // Asynchronous Function - Getting the Data from the Database
    async function loadAbsent() {
        let secondChart = document.getElementById("secondChart").getContext("2d");

        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/absent-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            })

            // Received data from Database
            const data = await res.json();

            // Here are the Data one by one which came from the Database
            jan = data.success.jan;
            feb = data.success.feb;
            mar = data.success.mar;
            apr = data.success.apr;
            may = data.success.ma;
            jun = data.success.jun;
            jul = data.success.jul;
            aug = data.success.aug;
            sep = data.success.sep;
            oct = data.success.oct;
            nov = data.success.nov;
            dec = data.success.dec;

            // if the getting of data from Database is success
            if (data.success) {
                document.querySelector("#absentSpinner").style.display = "none";
                document.querySelector("#secondChart").style.display = "block";

                // Creating a Chart with Dynamic data came from the Database
                let absentChart = new Chart(secondChart, {
                    type: "line",
                    data: {
                        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                        datasets: [
                            {
                                label: "Absent Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec,
                                ],

                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#00ead3",
                                    "#867ae9",
                                    "#47597e",
                                    "#5e8b7e",
                                    "#bf1363",
                                    "#185adb",
                                    "#5e454b",
                                ],
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Absent Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }

                    }
                })
            }
            else {
                iziToast.info({
                    title: data.error,
                    position: "topCenter",
                    timeout: 3000,
                });

            }
        }
        catch (err) {
            console.log(err);
        }
    };
    loadAbsent();
</script>

{{!-- LEAVE CHART --}}
<script>
    let thirdChart = document.querySelector("#thirdChart").getContext("2d");

    // Asynchronous Function - Getting the Data from the Database
    async function loadLeave() {
        let thirdChart = document.getElementById("thirdChart").getContext("2d");

        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/leave-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            });

            // Received data from Database
            const data = await res.json();

            // Here are the Data one by one which came from the Database
            jan = data.success.jan;
            feb = data.success.feb;
            mar = data.success.mar;
            apr = data.success.apr;
            may = data.success.ma;
            jun = data.success.jun;
            jul = data.success.jul;
            aug = data.success.aug;
            sep = data.success.sep;
            oct = data.success.oct;
            nov = data.success.nov;
            dec = data.success.dec;

            // if the getting of data from Database is success
            if (data.success) {
                document.querySelector("#leaveSpinner").style.display = "none";
                document.querySelector("#thirdChart").style.display = "block";

                // Creating a Chart with Dynamic data came from the Database
                let leaveChart = new Chart(thirdChart, {
                    type: "bar",
                    data: {
                        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                        datasets: [
                            {
                                label: "On Leave Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec,
                                ],

                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#00ead3",
                                    "#867ae9",
                                    "#47597e",
                                    "#5e8b7e",
                                    "#bf1363",
                                    "#185adb",
                                    "#5e454b",
                                ]
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Leave Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }

                    }
                })
            }
            else {
                iziToast.info({
                    title: data.error,
                    position: "topCenter",
                    timeout: 3000,
                });

            }
        }
        catch (err) {
            console.log(err);
        }
    };
    loadLeave();
</script>

{{!-- LATE OPTION CHART --}}
<script>

    let lateChartOpt = document.querySelector("#lateChartOpt");

    // FUNCTION FOR THE DROPDOWN SELECT - WHEN DROPDOWN CHANGES, GET THE SELECTED VALUE
    lateChartOpt.addEventListener("change", async function ()  {
        document.querySelector("#lateContainer").innerHTML = "";
        document.querySelector("#lateContainer").innerHTML = `
        <div class="spinner container" id="lateSpinner" style="display: block;">
            <div class="inner one"></div>
            <div class="inner two"></div>
            <div class="inner three"></div>
        </div>
        <canvas class="border" id="firstChart"></canvas>`;

        let lateChosen = lateChartOpt.value;
        document.querySelector("#firstChart").style.display = "none";

        if (lateChosen == "timeSeries") {
            let firstChart = document.getElementById("firstChart").getContext("2d");

            try {
                // Go to Routes to fetch the data 
                const res = await fetch('/late-chart', {
                    method: 'POST',
                    body: JSON.stringify({}),
                    headers: { 'Content-Type': 'application/json' }
                });

                // Received data from Database
                const data = await res.json();

                // Here are the Data one by one which came from the Database
                janAM = data.success.janAM;
                febAM = data.success.febAM;
                marAM = data.success.marAM;
                aprAM = data.success.aprAM;
                mayAM = data.success.maAM;
                junAM = data.success.junAM;
                julAM = data.success.julAM;
                augAM = data.success.augAM;
                sepAM = data.success.sepAM;
                octAM = data.success.octAM;
                novAM = data.success.novAM;
                decAM = data.success.decAM;

                janPM = data.success.janPM;
                febPM = data.success.febPM;
                marPM = data.success.marPM;
                aprPM = data.success.aprPM;
                mayPM = data.success.maPM;
                junPM = data.success.junPM;
                julPM = data.success.julPM;
                augPM = data.success.augPM;
                sepPM = data.success.sepPM;
                octPM = data.success.octPM;
                novPM = data.success.novPM;
                decPM = data.success.decPM;

                // if the getting of data from Database is success
                if (data.success) {

                    document.querySelector("#lateSpinner").style.display = "none";
                    document.querySelector("#firstChart").style.display = "block";

                    // Creating a Chart with Dynamic data came from the Database
                    let lateChart = new Chart(firstChart, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                            datasets: [
                                {
                                    label: "Day Shift",
                                    data: [
                                        janAM, febAM, marAM, aprAM, mayAM, junAM, julAM, augAM, sepAM, octAM, novAM, decAM
                                    ],
                                    borderColor: "#E6DD3B",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#F4F5D7"
                                    ]
                                },
                                {
                                    label: "Night Shift",
                                    data: [
                                        janPM, febPM, marPM, aprPM, mayPM, junPM, julPM, augPM, sepPM, octPM, novPM, decPM
                                    ],
                                    fill: false,
                                    borderColor: "#435560",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#698495"
                                    ]
                                }
                            ]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'timeseries',
                                }
                            },
                            plugins: {
                                title: {
                                    display: true,
                                    text: 'Employees to change schedule'
                                }
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }

                        }
                    })
                }
                else {
                    iziToast.info({
                        title: data.error,
                        position: "topCenter",
                        timeout: 3000,
                    });

                }
            }
            catch (err) {
                console.log(err);
            }

        } else {
             // Pass the selected value to the Function
            changeLate(lateChosen);
        }
    });

    // Asynchronous Function - Getting the Data from the Database
    async function changeLate(newLateType) {
    
        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/late-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            });

            // Received data from Database
            const data = await res.json();

            // if the getting of data from Database is success
            if (data.success) {

                document.querySelector("#lateSpinner").style.display = "none";
                document.querySelector("#firstChart").style.display = "block";
                

                let firstChart = document.getElementById("firstChart").getContext("2d");

                // Value came from the Selected Dropdown Text
                chartLateType = newLateType;

                // Here are the Data one by one which came from the Database
                trafficCount = data.success.traffic;
                dmtCount = data.success.delayedMassTransit;
                badweatherCount = data.success.badWeather;
                familyillnessCount = data.success.familyIllness;
                oversleptCount = data.success.overslept;
                othersCount = data.success.others;

                // Creating a Chart with Dynamic data came from the Database
                let lateChart = new Chart(firstChart, {
                    type: chartLateType,
                    data: {
                        labels: ["Traffic", "Delayed Mass Transit", "Bad Weather", "Family sickness", "Overslept", "Others"],
                        datasets: [
                            {
                                label: "Late Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    trafficCount, dmtCount, badweatherCount, familyillnessCount, oversleptCount, othersCount
                                ],
                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#d1d9d9"
                                ]
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Late Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            }
        }
        catch (err) {
            console.log(err);
        }
    };
</script>

{{!-- ABSENT OPTION CHART --}}
<script>
    let absentChartOpt = document.querySelector("#absentChartOpt");

    // FUNCTION FOR THE DROPDOWN SELECT - WHEN DROPDOWN CHANGES, GET THE SELECTED VALUE
    absentChartOpt.addEventListener("change", async function () {
        document.querySelector("#absentContainer").innerHTML = "";
        document.querySelector("#absentContainer").innerHTML = `
        <div class="spinner container" id="absentSpinner" style="display: block;">
            <div class="inner one"></div>
            <div class="inner two"></div>
            <div class="inner three"></div>
        </div>
        <canvas class="border" id="secondChart"></canvas>`;

        let absentChosen = absentChartOpt.value;
        document.querySelector("#secondChart").style.display = "none";

        if (absentChosen == "timeSeries") {
            let secondChart = document.getElementById("secondChart").getContext("2d");

            try {
                // Go to Routes to fetch the data 
                const res = await fetch('/absent-chart', {
                    method: 'POST',
                    body: JSON.stringify({}),
                    headers: { 'Content-Type': 'application/json' }
                });

                // Received data from Database
                const data = await res.json();

                // Here are the Data one by one which came from the Database
                janAM = data.success.janAM;
                febAM = data.success.febAM;
                marAM = data.success.marAM;
                aprAM = data.success.aprAM;
                mayAM = data.success.maAM;
                junAM = data.success.junAM;
                julAM = data.success.julAM;
                augAM = data.success.augAM;
                sepAM = data.success.sepAM;
                octAM = data.success.octAM;
                novAM = data.success.novAM;
                decAM = data.success.decAM;

                janPM = data.success.janPM;
                febPM = data.success.febPM;
                marPM = data.success.marPM;
                aprPM = data.success.aprPM;
                mayPM = data.success.maPM;
                junPM = data.success.junPM;
                julPM = data.success.julPM;
                augPM = data.success.augPM;
                sepPM = data.success.sepPM;
                octPM = data.success.octPM;
                novPM = data.success.novPM;
                decPM = data.success.decPM;

                // if the getting of data from Database is success
                if (data.success) {

                    document.querySelector("#absentSpinner").style.display = "none";
                    document.querySelector("#secondChart").style.display = "block";

                    // Creating a Chart with Dynamic data came from the Database
                    let absentChart = new Chart(secondChart, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                            datasets: [
                                {
                                    label: "Day Shift",
                                    data: [
                                        janAM, febAM, marAM, aprAM, mayAM, junAM, julAM, augAM, sepAM, octAM, novAM, decAM
                                    ],
                                    borderColor: "#E6DD3B",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#F4F5D7"
                                    ]
                                },
                                {
                                    label: "Night Shift",
                                    data: [
                                        janPM, febPM, marPM, aprPM, mayPM, junPM, julPM, augPM, sepPM, octPM, novPM, decPM
                                    ],
                                    fill: false,
                                    borderColor: "#435560",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#698495"
                                    ]
                                }
                            ]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'timeseries',
                                }
                            },
                            plugins: {
                                title: {
                                    display: true,
                                    text: 'Employees to be Terminated'
                                }
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }

                        }
                    })
                }
                else {
                    iziToast.info({
                        title: data.error,
                        position: "topCenter",
                        timeout: 3000,
                    });

                }
            }
            catch (err) {
                console.log(err);
            }

        } else {
            // Pass the selected value to the Function
            changeAbsent(absentChosen);
        }
        
    });

    // Asynchronous Function - Getting the Data from the Database
    async function changeAbsent(newAbsentType) {

        // Value came from the Selected Dropdown Text
        chartAbsentType = newAbsentType;

        let secondChart = document.getElementById("secondChart").getContext("2d");

        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/absent-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            });

            // Received data from Database
            const data = await res.json();

            // Here are the Data one by one which came from the Database
            jan = data.success.jan;
            feb = data.success.feb;
            mar = data.success.mar;
            apr = data.success.apr;
            may = data.success.ma;
            jun = data.success.jun;
            jul = data.success.jul;
            aug = data.success.aug;
            sep = data.success.sep;
            oct = data.success.oct;
            nov = data.success.nov;
            dec = data.success.dec;

            // if the getting of data from Database is success
            if (data.success) {

                document.querySelector("#absentSpinner").style.display = "none";
                document.querySelector("#secondChart").style.display = "block";

                // Creating a Chart with Dynamic data came from the Database
                let absentChart = new Chart(secondChart, {
                    type: chartAbsentType,
                    data: {
                        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                        datasets: [
                            {
                                label: "Absent Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec
                                ],

                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#00ead3",
                                    "#867ae9",
                                    "#47597e",
                                    "#5e8b7e",
                                    "#bf1363",
                                    "#185adb",
                                    "#5e454b",
                                ]
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Absent Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }

                    }
                })
            }
            else {
                iziToast.info({
                    title: data.error,
                    position: "topCenter",
                    timeout: 3000,
                });

            }
        }
        catch (err) {
            console.log(err);
        }


    };
</script>

{{!-- LEAVE OPTION CHART --}}
<script>
    let leaveChartOpt = document.querySelector("#leaveChartOpt");

    // FUNCTION FOR THE DROPDOWN SELECT - WHEN DROPDOWN CHANGES, GET THE SELECTED VALUE
    leaveChartOpt.addEventListener("change", async function () {
        document.querySelector("#leaveContainer").innerHTML = "";
        document.querySelector("#leaveContainer").innerHTML = `
        <div class="spinner container" id="leaveSpinner" style="display: block;">
            <div class="inner one"></div>
            <div class="inner two"></div>
            <div class="inner three"></div>
        </div>
        <canvas class="border" id="thirdChart"></canvas>
        `;

        let leaveChosen = leaveChartOpt.value;
        document.querySelector("#thirdChart").style.display = "none";

        if (leaveChosen == "timeSeries") {
            let thirdChart = document.getElementById("thirdChart").getContext("2d");

            try {
                // Go to Routes to fetch the data 
                const res = await fetch('/leave-chart', {
                    method: 'POST',
                    body: JSON.stringify({}),
                    headers: { 'Content-Type': 'application/json' }
                });

                // Received data from Database
                const data = await res.json();

                // Here are the Data one by one which came from the Database
                janAM = data.success.janAM;
                febAM = data.success.febAM;
                marAM = data.success.marAM;
                aprAM = data.success.aprAM;
                mayAM = data.success.maAM;
                junAM = data.success.junAM;
                julAM = data.success.julAM;
                augAM = data.success.augAM;
                sepAM = data.success.sepAM;
                octAM = data.success.octAM;
                novAM = data.success.novAM;
                decAM = data.success.decAM;

                janPM = data.success.janPM;
                febPM = data.success.febPM;
                marPM = data.success.marPM;
                aprPM = data.success.aprPM;
                mayPM = data.success.maPM;
                junPM = data.success.junPM;
                julPM = data.success.julPM;
                augPM = data.success.augPM;
                sepPM = data.success.sepPM;
                octPM = data.success.octPM;
                novPM = data.success.novPM;
                decPM = data.success.decPM;

                // if the getting of data from Database is success
                if (data.success) {

                    document.querySelector("#leaveSpinner").style.display = "none";
                    document.querySelector("#thirdChart").style.display = "block";

                    // Creating a Chart with Dynamic data came from the Database
                    let leaveChart = new Chart(thirdChart, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                            datasets: [
                                {
                                    label: "Day Shift",
                                    data: [
                                        janAM, febAM, marAM, aprAM, mayAM, junAM, julAM, augAM, sepAM, octAM, novAM, decAM
                                    ],
                                    borderColor: "#E6DD3B",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#F4F5D7"
                                    ]
                                },
                                {
                                    label: "Night Shift",
                                    data: [
                                        janPM, febPM, marPM, aprPM, mayPM, junPM, julPM, augPM, sepPM, octPM, novPM, decPM
                                    ],
                                    fill: false,
                                    borderColor: "#435560",
                                    tension: 0.4,
                                    backgroundColor: [
                                    "#698495"
                                    ]
                                }
                            ]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'timeseries',
                                }
                            },
                            plugins: {
                                title: {
                                    display: true,
                                    text: 'Employees Needed'
                                }
                            },
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }

                        }
                    })
                }
                else {
                    iziToast.info({
                        title: data.error,
                        position: "topCenter",
                        timeout: 3000,
                    });

                }
            }
            catch (err) {
                console.log(err);
            }

        } else {
            // Pass the selected value to the Function
            changeLeave(leaveChosen);
        }

    });

    // Asynchronous Function - Getting the Data from the Database
    async function changeLeave(newLeaveType) {

        // Value came from the Selected Dropdown Text
        chartLeaveType = newLeaveType;

        let thirdChart = document.getElementById("thirdChart").getContext("2d");

        try {
            // Go to Routes to fetch the data 
            const res = await fetch('/leave-chart', {
                method: 'POST',
                body: JSON.stringify({}),
                headers: { 'Content-Type': 'application/json' }
            });

            // Received data from Database
            const data = await res.json();

            // Here are the Data one by one which came from the Database
            jan = data.success.jan;
            feb = data.success.feb;
            mar = data.success.mar;
            apr = data.success.apr;
            may = data.success.ma;
            jun = data.success.jun;
            jul = data.success.jul;
            aug = data.success.aug;
            sep = data.success.sep;
            oct = data.success.oct;
            nov = data.success.nov;
            dec = data.success.dec;

            // if the getting of data from Database is success
            if (data.success) {

                document.querySelector("#leaveSpinner").style.display = "none";
                document.querySelector("#thirdChart").style.display = "block";

                // Creating a Chart with Dynamic data came from the Database
                let leaveChart = new Chart(thirdChart, {
                    type: chartLeaveType,
                    data: {
                        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
                        datasets: [
                            {
                                label: "On Leave Employees",
                                data: [
                                    // Here are the Data to show in the Charts
                                    jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec,
                                ],

                                backgroundColor: [
                                    "#caf7e3",
                                    "#d5ecc2",
                                    "#ffd3b4",
                                    "#ffaaa7",
                                    "#fff5ab",
                                    "#00ead3",
                                    "#867ae9",
                                    "#47597e",
                                    "#5e8b7e",
                                    "#bf1363",
                                    "#185adb",
                                    "#5e454b",
                                ]
                            }
                        ]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Leave Records'
                            }
                        },
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }

                    }
                })
            }
            else {
                iziToast.info({
                    title: data.error,
                    position: "topCenter",
                    timeout: 3000,
                });

            }
        }
        catch (err) {
            console.log(err);
        }
    };
</script>